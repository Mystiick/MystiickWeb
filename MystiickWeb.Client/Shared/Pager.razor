@if (LastPage > 0)
{
    <nav aria-label="@Label">
        <ul class="pagination flex-wrap">
            <li class="page-item @(PageNumber == 0 ? "disabled" : "")"><a class="page-link" href="" @onclick="(async () => { if (PageNumber > 0) await UpdatePage(PageNumber - 1); })" @onclick:preventDefault>&laquo;</a></li>

            @for (int i = 0; i < LastPage + 1; i++)
            {
                // Need to capture the page number locally since i keeps getting incremented
                int page = i;

                <li class="page-item @(PageNumber == i ? "active" : "")"><a class="page-link" href="" @onclick="(async () => await UpdatePage(page))" @onclick:preventDefault>@(i+1)</a></li>
            }

            <li class="page-item @(PageNumber == LastPage ? "disabled" : "")"><a class="page-link" href="" @onclick="(async () => { if (PageNumber < LastPage) await UpdatePage(PageNumber + 1); })" @onclick:preventDefault>&raquo;</a></li>
        </ul>
    </nav>
}

@code {
    [Parameter] public string Label { get; set; } = "";
    [Parameter] public int Items { get; set; }
    [Parameter] public int PageSize { get; set; } = 5;
    [Parameter] public int PageNumber { get; set; }
    [Parameter] public EventCallback<int> OnPageUpdate { get; set; }

    public int LastPage
    {
        get
        {
            return (Items - 1) / PageSize;
        }
    }

    protected async Task UpdatePage(int page)
    {
        await OnPageUpdate.InvokeAsync(page);
    }
}
