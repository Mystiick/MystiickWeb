@using MystiickWeb.Shared.Models;
@using MystiickWeb.Shared.Constants;

<div class="card image-card m-2 w-100">
    @if (Image != null)
    {
        <img class="pointer" src="/@ControllerConstants.Images/@Image.GUID/img" @onclick="OnImageClicked" />
        <div class="p-1">
            <span class="btn-link pointer" @onclick="@(x => OnSubcategoryClicked(Image.Subcategory))">@Image.Subcategory</span>
        </div>
        <div class="p-1">
            @if (Image.Tags.Any())
            {
                <span>Tags:</span>
                @foreach (var tag in Image.Tags)
                {
                    <span class="btn-link pointer nowrap" @onclick="@(x => OnTagClicked(tag))">@tag</span><span>&nbsp;</span>
                }
            }
        </div>
    }
</div>

@code {
    [Parameter] public ImageResult? Image { get; set; }
    [Parameter] public EventCallback<ImageResult> OnImageClick { get; set; }
    [Parameter] public EventCallback<string> OnSubcategoryClick { get; set; }
    [Parameter] public EventCallback<string> OnTagClick { get; set; }

    [Inject] private NavigationManager _nav { get; set; }

    public async Task OnImageClicked(MouseEventArgs arg)
    {
        if (OnImageClick.HasDelegate)
        {
            await OnImageClick.InvokeAsync(Image);
        }
        else if (Image != null)
        {
            _nav.NavigateTo($"photogrid/{Image.GUID}");
        }
    }

    public async Task OnSubcategoryClicked(string subcategory)
    {
        if (OnSubcategoryClick.HasDelegate)
        {
            await OnSubcategoryClick.InvokeAsync(subcategory);
        }
        else if (!string.IsNullOrWhiteSpace(subcategory))
        {
            _nav.NavigateTo($"photogrid/subcategory/{subcategory}");
        }
    }

    public async Task OnTagClicked(string tag)
    {
        if (OnTagClick.HasDelegate)
        {
            await OnTagClick.InvokeAsync(tag);
        }
        else if (!string.IsNullOrWhiteSpace(tag))
        {
            _nav.NavigateTo($"photogrid/tag/{tag}");
        }
    }
}